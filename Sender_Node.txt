#include <ArduinoJson.h>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <SoftwareSerial.h>


SoftwareSerial btSerial(D3, D4);
const char* ssid = "HongSon";
const char* password = "hongson2002";
const char* mqtt_server = "broker.mqtt-dashboard.com";

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {

  delay(10);
  
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  String message;
  for (int i = 0; i < length; i++) {
    message += String((char)payload[i]);
    //Serial.print((char)payload[i]);
  }
  Serial.print(message);
  Serial.println();
}


void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-doantotnghiep2021";
   
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      //client.publish("outTopic", "hello world");
      
      // ... and resubscribe
      
      client.subscribe("quan9quan9 Username");
      client.subscribe("quan9quan9 CMND");
      client.subscribe("quan9quan9 Adress");
    } 
    else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  btSerial.begin(9600);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void loop() {

  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  
 
  
  //client.publish("111333222999111","hello");
  //client.subscribe("111333222999111");

  if (btSerial.available() > 0){   
    String data=btSerial.readString();
    Serial.println(data);
    call(data);
  }
  delay(200);

}

void call(String json_string){
  DynamicJsonDocument doc(1024);
  deserializeJson(doc,json_string);
  JsonObject obj = doc.as<JsonObject>();
  
  const char* User_name = obj["Name"];
  client.publish("quan9quan9 Username",User_name);
  
  const char* CMND = obj["CMND"];
  client.publish("quan9quan9 CMND",CMND);
  
  const char* Adress = obj["Adress"];
  client.publish("quan9quan9 Adress",Adress);
  
  //if (User_name!="null"){ Serial.println(User_name);Serial.println(CMND);Serial.println(Adress);}
}